# Set Ctrl+Space as the prefix key
unbind C-b
set -g prefix C-Space

# set default shell
set-option -g default-terminal /usr/bin/zsh

# Key to reload config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux.conf"

# Allows mouse to interact with tmux
set -g mouse on

# Start windows at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# More space to status right name
set -g status-right-length 80

# Split like vim
unbind v
unbind s
unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Copy mode
set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Better drag in vi-mode
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection



# Neovim integration
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panels with Ctrl + arrow keys
bind-key -r -T prefix       C-Up              resize-pane -U
bind-key -r -T prefix       C-Down            resize-pane -D
bind-key -r -T prefix       C-Left            resize-pane -L
bind-key -r -T prefix       C-Right           resize-pane -R

unbind -T prefix h
unbind -T prefix j
unbind -T prefix k
unbind -T prefix l
bind-key -r -T prefix h selectw -t 1
bind-key -r -T prefix j selectw -t 2
bind-key -r -T prefix k selectw -t 3
bind-key -r -T prefix l selectw -t 4

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
bind-key -Ttable1 'C-w' send-keys C-w
bind-key -Ttable1 'h' select-pane -L
bind-key -Ttable1 'j' select-pane -D
bind-key -Ttable1 'k' select-pane -U
bind-key -Ttable1 'l' select-pane -R



# Open tmux-chsh
bind-key -r i run-shell "tmux neww tmux-chsh"
unbind o
bind-key -r o run-shell "tmux neww devdocs-local"

# Open tmux-sessionizer
bind-key -n M-f run-shell "tmux neww tmux-sessionizer"

# Move to next or previous session
bind -n M-n switch-client -n
bind -n M-p switch-client -p

# Go to last session
bind -n M-B switch-client -l
bind -n M-b switch-client -l

# 
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'dracula/tmux'
set -g @plugin "arcticicestudio/nord-tmux"

# Initialize TMUX plugin manager (keep at the very end of the file)
run '~/.tmux/plugins/tpm/tpm'
