#!/usr/bin/env bash


 # curl -sS https://devdocs.io//assets/docs-1e2f0a8c7881562b936bd06532f9c7e7edd3165773cbd9cdf5cf528db187e2c7.js | grep "name" | sed "s/name: \"\(.*\)\",/\1/g" | uniq
# https://github.com/whiteinge/dotfiles/blob/9b3650b/bin/devdocs-local#L57

LANGUAGE_LIST_FILE=/tmp/devdocs_language_list
DEVDOCS_DIR="${HOME}/tmp/docs/devdocs.io"

download_list() {
  docs_link=`curl -s "https://devdocs.io/" | 
    grep -E "docs-.*\.js" |
    sed "s/.*\"\(.*\)\".*/\1/"`

  curl -sS "https://devdocs.io$docs_link" > $LANGUAGE_LIST_FILE
}


list() {
  if [[ ! -f "$LANGUAGE_LIST_FILE" ]]; then
    download_list
  fi

  cat $LANGUAGE_LIST_FILE |
  grep -E "name|slug|mtime" |
  xargs -L 3 |
  sed "s/name: \(.*\), slug: \(.*\), mtime: \(.*\),/\1\t\2\t\3/"
}

download_docs() {
  selection=`list| fzf -d "\t" --with-nth 1,2`
  slug=`echo "$selection" | cut -f 2`
  mtime=`echo "$selection" | cut -f 3`

  slug_dir="${DEVDOCS_DIR}/${slug}"

  mkdir -p "$slug_dir"
  cd "$slug_dir"

  if [[ -f "${slug_dir}/mtime" ]]; then
    old_mtime=`cat ${slug_dir}/mtime`

    if [[ "$old_mtime" -ge "$mtime" ]]; then
      echo "${slug} already at the last version" 
      return;
    fi
  fi

  echo "$mtime" > mtime
  echo "Installing last version of ${slug}"

  curl -sS -o index.json "https://devdocs.io/docs/${slug}/index.json?${mtime}"
  curl -sS -o db.json "https://documents.devdocs.io/${slug}/db.json?${mtime}"
}

doc() {
  echo "Documentation"
}

if [[ $# -eq 0 ]]; then
  doc
else
  cmd=$1
  shift

  "$cmd" "$0"
fi

# docs_link=`curl -s "https://devdocs.io/" | 
#   grep -E "docs-.*\.js" |
#   sed "s/.*\"\(.*\)\".*/\1/"`
#
# list=`curl -sS "https://devdocs.io$docs_link" |
#   grep -E "name|slug|mtime" |
#   xargs -L 3 |
#   sed "s/name: \(.*\), slug: \(.*\), mtime: \(.*\),/\1;\2;\3/"`
#
# echo $list | tr ";" "\t" | tr " " "\n" | fzf -d "\t" --with-nth 1,2 
